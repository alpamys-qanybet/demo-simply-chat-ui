// Generated by CoffeeScript 1.4.0
(function() {

  angular.module('ibnsina').controller('RoomCtrl', [
    '$scope', '$state', '$rootScope', '$api', 'MessagesMonitoring', '$security', '$mode', '$cookies', function($scope, $state, $rootScope, $api, Messages, $security, $mode, $cookies) {
      var fetchRoomUsers, getAvailableUsers, init, pureModel;
      $rootScope.current = 'room';
      pureModel = {
        room: {
          add: {
            id: null,
            name: null
          },
          edit: {
            id: null,
            name: null
          }
        },
        select: {
          operator: null
        }
      };
      $scope.model = angular.copy(pureModel);
      init = function() {
        $scope.model = angular.copy(pureModel);
      };
      $scope.preAdd = function() {
        init();
        $mode.change('add');
      };
      getAvailableUsers = function() {
        var accessToChatRoomIndex, index, user, _i, _len, _ref;
        if (!$scope.model.room.edit.id) {
          return;
        }
        $scope.users = [];
        $scope.model.room.edit.available = false;
        accessToChatRoomIndex = $scope.model.room.edit.users.map(function(e) {
          return e.id;
        }).indexOf(Number($cookies.get('userId')));
        $scope.model.room.edit.available = accessToChatRoomIndex > -1;
        _ref = $scope.allUsers;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          user = _ref[_i];
          index = $scope.model.room.edit.users.map(function(e) {
            return e.id;
          }).indexOf(user.id);
          if (index === -1) {
            $scope.users.push(user);
          }
        }
        if ($scope.users.length > 0) {
          $scope.model.select.user = $scope.users[0].id;
        }
      };
      fetchRoomUsers = function(id) {
        $rootScope.loading = true;
        $api.room.users.list(id, function(data) {
          $rootScope.loading = false;
          $scope.model.room.edit.users = data;
        });
      };
      $scope.add = function() {
        var plain;
        plain = {
          name: $scope.model.room.add.name
        };
        $rootScope.loading = true;
        $api.room.create(plain, function(data) {
          $rootScope.loading = false;
          $mode.change('list');
        });
      };
      $scope.edit = function() {
        var plain;
        plain = {
          id: $scope.model.room.edit.id,
          name: $scope.model.room.edit.name
        };
        $rootScope.loading = true;
        $api.room.update(plain, function(data) {
          $rootScope.loading = false;
          $mode.change('list');
        });
      };
      $scope.select = function(room) {
        $scope.model.room.edit = room;
        getAvailableUsers();
        $mode.change('view');
      };
      $scope.addUser = function() {
        var id, plain;
        id = $scope.model.room.edit.id;
        plain = {
          id: $scope.model.select.user
        };
        $rootScope.loading = true;
        $api.room.users.create(id, plain, function(data) {
          $rootScope.loading = false;
          fetchRoomUsers(id);
        });
      };
      $scope.removeUser = function(userId) {
        var id;
        id = $scope.model.room.edit.id;
        $rootScope.loading = true;
        $api.room.users["delete"](id, userId, function(data) {
          $rootScope.loading = false;
          fetchRoomUsers(id);
        });
      };
      $scope.removeRoom = function() {
        var id;
        id = $scope.model.room.edit.id;
        $rootScope.loading = true;
        $api.room["delete"](id, function(data) {
          $rootScope.loading = false;
          $mode.change('list');
        });
      };
      $scope.sendMessage = function() {
        var plain;
        plain = {
          content: $scope.model.msg,
          roomId: $scope.model.room.edit.id,
          userId: $cookies.get('userId')
        };
        $api.room.users.message.send(plain, function(data) {
          $rootScope.loading = false;
        });
      };
      $scope.Messages = Messages;
      $scope.$watch(function() {
        return $scope.Messages.response['queue'];
      }, function(newvalue, oldvalue) {
        var index, indexInsideRoom, indexRoom, msg, room, roomInfo, rooms, user, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;
        if (!newvalue) {
          return;
        }
        if (newvalue.event === 'LAUNCH_INFO') {
          init();
          $scope.rooms = [];
          $scope.allUsers = newvalue.users;
          rooms = angular.copy(newvalue.rooms);
          for (_i = 0, _len = rooms.length; _i < _len; _i++) {
            roomInfo = rooms[_i];
            roomInfo.room.users = roomInfo.users;
            roomInfo.room.messages = roomInfo.messages;
            _ref = roomInfo.room.messages;
            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
              msg = _ref[_j];
              index = $scope.allUsers.map(function(e) {
                return e.id;
              }).indexOf(msg.userId);
              msg.user = angular.copy($scope.allUsers[index]);
            }
            $scope.rooms.push(roomInfo.room);
          }
          $mode.change('list');
        } else if (newvalue.event === 'ADD_ROOM') {
          room = angular.copy(newvalue.room);
          room.messages = [];
          room.users = [];
          $scope.rooms.push(room);
        } else if (newvalue.event === 'EDIT_ROOM') {
          room = angular.copy(newvalue.room);
          index = $scope.rooms.map(function(e) {
            return e.id;
          }).indexOf(room.id);
          $scope.rooms[index].name = room.name;
        } else if (newvalue.event === 'REMOVE_ROOM') {
          index = $scope.rooms.map(function(e) {
            return e.id;
          }).indexOf(newvalue.roomId);
          $scope.rooms.splice(index, 1);
          getAvailableUsers();
          if ($scope.model.room.edit.id) {
            if (newvalue.roomId === $scope.model.room.edit.id) {
              $mode.change('list');
            }
          }
        } else if (newvalue.event === 'ADD_USER') {
          user = angular.copy(newvalue.user);
          $scope.allUsers.push(user);
          getAvailableUsers();
        } else if (newvalue.event === 'EDIT_USER') {
          user = angular.copy(newvalue.user);
          index = $scope.allUsers.map(function(e) {
            return e.id;
          }).indexOf(user.id);
          $scope.allUsers[index].name = user.name;
          $scope.allUsers[index].online = user.online;
        } else if (newvalue.event === 'REMOVE_USER') {
          index = $scope.allUsers.map(function(e) {
            return e.id;
          }).indexOf(newvalue.userId);
          $scope.allUsers.splice(index, 1);
          _ref1 = $scope.rooms;
          for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {
            room = _ref1[_k];
            indexInsideRoom = room.users.map(function(e) {
              return e.id;
            }).indexOf(newvalue.userId);
            if (indexInsideRoom > -1) {
              room.users.splice(indexInsideRoom, 1);
            }
          }
          getAvailableUsers();
        } else if (newvalue.event === 'ADD_USER_TO_ROOM') {
          index = $scope.allUsers.map(function(e) {
            return e.id;
          }).indexOf(newvalue.userId);
          indexRoom = $scope.rooms.map(function(e) {
            return e.id;
          }).indexOf(newvalue.roomId);
          $scope.rooms[indexRoom].users.push(angular.copy($scope.allUsers[index]));
          getAvailableUsers();
        } else if (newvalue.event === 'REMOVE_USER_FROM_ROOM') {
          indexRoom = $scope.rooms.map(function(e) {
            return e.id;
          }).indexOf(newvalue.roomId);
          indexInsideRoom = $scope.rooms[indexRoom].users.map(function(e) {
            return e.id;
          }).indexOf(newvalue.userId);
          if (indexInsideRoom > -1) {
            $scope.rooms[indexRoom].users.splice(indexInsideRoom, 1);
          }
          getAvailableUsers();
        } else if (newvalue.event === 'MESSAGE_ROOM') {
          msg = angular.copy(newvalue.message);
          indexRoom = $scope.rooms.map(function(e) {
            return e.id;
          }).indexOf(msg.roomId);
          index = $scope.allUsers.map(function(e) {
            return e.id;
          }).indexOf(msg.userId);
          msg.user = angular.copy($scope.allUsers[index]);
          $scope.rooms[indexRoom].messages.push(msg);
        }
      }, true);
    }
  ]);

}).call(this);
